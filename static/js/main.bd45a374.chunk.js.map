{"version":3,"sources":["components/form/input.js","components/form/button.js","components/form/sign-up.js","components/form/sign-in.js","components/to-do/row.js","components/to-do/list.js","components/to-do/add.js","components/to-do/filter.js","components/router/page-1.js","components/router/page-2.js","components/router/page-3.js","components/to-do/index.js","app/routes/index.js","components/common/sidebar.js","App.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["Input","props","type","required","value","onChange","name","Button","className","onClick","click","text","SignUp","state","first_name","last_name","email","password","handleChange","bind","submit","event","console","log","this","setState","target","newLine","to","id","React","Component","SignIn","req","href","Row","changeStatus","removeRow","List","list","map","todo","Add","inputValue","onSave","addItem","ref","c","Filter","handleFilter","htmlFor","Page1","useRouteMatch","Page2","Page3","exact","activeStyle","background","path","Todo","todos","status","addStatus","filter","onChangeFilter","key","filtered","item","change","ids","_map","max","Math","push","completed","Not_Found","Routes","component","Header","Layout","Sider","Content","Sidebar","collapsed","toggle","style","minHeight","trigger","collapsible","theme","mode","defaultSelectedKeys","Item","icon","UserOutlined","VideoCameraOutlined","UploadOutlined","padding","createElement","MenuUnfoldOutlined","MenuFoldOutlined","margin","App","counterSlice","createSlice","initialState","reducers","increment","decrement","incrementByAmount","action","payload","actions","configureStore","reducer","counter","counterReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bd45a374.chunk.js","sourcesContent":["import react from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Input = props => \r\n<input type={props.type} required={props.required} value={props.value} onChange={props.onChange} name={props.name}/>\r\n\r\nexport default Input;\r\n\r\n","import react from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = props => \r\n<button type={props.type} className={props.className} onClick={props.click}>{props.text}</button>\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport Input from './input';\r\nimport PropTypes from 'prop-types';\r\nimport Button from './button';\r\nimport Submit from './submit';\r\nimport {Link, Redirect} from 'react-router-dom';\r\n\r\nclass SignUp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      first_name: '',\r\n      last_name: '',\r\n      email: '',\r\n      password: '',\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.submit = this.submit.bind(this);\r\n\r\n\r\n  }\r\n  handleChange(event) {\r\n    console.log(event);\r\n    this.setState({\r\n      ...this.state, [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    var newLine = \"\\r\\n\";\r\n    var msg = 'Fist Name: ';\r\n    msg += this.state.first_name;\r\n    msg += newLine;\r\n    msg += 'Last Name: ';\r\n    msg += this.state.last_name;\r\n    msg += newLine;\r\n    msg += 'Email: ';\r\n    msg += this.state.email;\r\n    msg += newLine;\r\n    msg += 'Password: ';\r\n    msg += this.state.password;\r\n\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n  render() {\r\n    return(\r\n    <div id=\"signup\">   \r\n              <h1>Sign Up for Free</h1>\r\n              \r\n              \r\n              <div className=\"top-row\">\r\n                <div className=\"field-wrap\">\r\n                  <label>\r\n                    First Name<span className=\"req\">*</span>\r\n                  </label>\r\n                  <Input type=\"text\" required=\"required\" value={this.state.first_name} onChange={this.handleChange} name=\"first_name\"/>\r\n                </div>\r\n            \r\n                <div className=\"field-wrap\">\r\n                  <label>\r\n                    Last Name<span className=\"req\">*</span>\r\n                  </label>\r\n                  <Input type=\"text\" required=\"required\" value={this.state.last_name} onChange={this.handleChange} name=\"last_name\"/>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"field-wrap\">\r\n                <label>\r\n                  Email Address<span className=\"req\">*</span>\r\n                </label>\r\n                <Input type=\"email\" required=\"required\" value={this.state.email} onChange={this.handleChange} name=\"email\"/>\r\n              </div>\r\n              \r\n              <div className=\"field-wrap\">\r\n                <label>\r\n                  Set A Password<span className=\"req\">*</span>\r\n                </label>\r\n                <Input type=\"password\" required=\"required\" value={this.state.password} onChange={this.handleChange} name=\"password\"/>\r\n              </div>\r\n              \r\n              <Button type=\"submit\" className=\"button button-block\" text=\"Get Started\" click={this.submit}>\r\n                {/* <Link to=\"/about\">Dashboard</Link> */}\r\n                </Button>\r\n              \r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp\r\n","import react from \"react\";\r\nimport Input from './input';\r\n\r\nconst SignIn = props => \r\n\r\n<div id=\"login\">   \r\n          <h1>Welcome Back!</h1>\r\n          \r\n\r\n            <div className=\"field-wrap\">\r\n            <label>\r\n              Email Address<span className=\"req\">*</span>\r\n            </label>\r\n            <Input type=\"email\" req= \"required\"></Input>\r\n          </div>\r\n          \r\n          <div className=\"field-wrap\">\r\n            <label>\r\n              Password<span className=\"req\">*</span>\r\n            </label>\r\n            <Input type=\"password\"></Input>\r\n          </div>\r\n          \r\n          <p className=\"forgot\"><a href=\"#\">Forgot Password?</a></p>\r\n          \r\n    <button className=\"button button-block\"><a href={'reactjs#/todo/to-do'}>Log In</a></button>\r\n</div>\r\n\r\nexport default SignIn","import React from \"react\";\r\n// import Input from './input';\r\n// import PropTypes from 'prop-types';\r\n// import Button from './button';\r\n// import Submit from './submit';\r\n\r\nclass Row extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log();\r\n    // this.state = {\r\n    //   first_name: '',\r\n    //   last_name: '',\r\n    //   email: '',\r\n    //   password: '',\r\n    // };\r\n\r\n    // this.handleChange = this.handleChange.bind(this);\r\n    // this.submit = this.submit.bind(this);\r\n\r\n\r\n  }\r\n  // handleChange(event) {\r\n  //   console.log(event);\r\n  //   this.setState({\r\n  //     ...this.state, [event.target.name]: event.target.value\r\n  //   });\r\n  // }\r\n\r\n  // submit() {\r\n  //   var newLine = \"\\r\\n\";\r\n  //   var msg = 'Fist Name: ';\r\n  //   msg += this.state.first_name;\r\n  //   msg += newLine;\r\n  //   msg += 'Last Name: ';\r\n  //   msg += this.state.last_name;\r\n  //   msg += newLine;\r\n  //   msg += 'Email: ';\r\n  //   msg += this.state.email;\r\n  //   msg += newLine;\r\n  //   msg += 'Password: ';\r\n  //   msg += this.state.password;\r\n\r\n  //   alert(msg);\r\n  //   return;\r\n  // }\r\n  render() {\r\n    return(\r\n          <li>\r\n            <input type=\"checkbox\" onClick={this.props.changeStatus}/>\r\n            <label>{this.props.name}</label>\r\n            <button type=\"button\" onClick={this.props.removeRow}>x</button>\r\n          </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Row\r\n","import React from \"react\";\r\nimport Row from './row'\r\n\r\nclass List extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    //() => this.removeRow(todo.id) work\r\n    // this.removeRow(todo.id) don't work\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    {\r\n                        this.props.list.map((todo) =>\r\n                            <Row\r\n                                key={todo.id}\r\n                                id={todo.id}\r\n                                removeRow={() => this.props.removeRow(todo.id)}\r\n                                name={todo.name}\r\n                                changeStatus={() => this.props.changeStatus(todo.id)}\r\n                            ></Row>\r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport Input from \"../form/input\";\r\n\r\nclass Add extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputValue: '',\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSave = this.onSave.bind(this);\r\n\r\n\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n          ...this.state, inputValue: event.target.value\r\n        });\r\n    }\r\n    onSave() {\r\n        this.props.addItem(this.state.inputValue);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button type=\"button\" onClick={this.onSave}>Add</button>\r\n                <input type=\"text\" ref={(c) => this.state.inputValue} onChange={this.handleChange}></input>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Add;\r\n","import React from \"react\";\r\nimport Input from \"../form/input\";\r\nimport Link from 'react-router-dom';\r\n\r\nclass Filter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <Link to =\"/filter?filter=all\">\r\n                </Link>\r\n                <Link to =\"/filter?filter=complete\">\r\n                </Link>\r\n                <Link to =\"/filter?filter=unComplete\">\r\n                </Link> */}\r\n                <input type=\"radio\" id=\"contactChoice1\"\r\n                       name=\"contact\" value=\"1\" onClick={() => this.props.handleFilter(1)}/>\r\n                <label htmlFor=\"contactChoice1\">All</label>\r\n\r\n                <input type=\"radio\" id=\"contactChoice2\"\r\n                       name=\"contact\" value=\"2\" onClick={() => this.props.handleFilter(2)}/>\r\n                <label htmlFor=\"contactChoice2\">Complete</label>\r\n\r\n                <input type=\"radio\" id=\"contactChoice3\"\r\n                       name=\"contact\" value=\"3\" onClick={() => this.props.handleFilter(3)}/>\r\n                <label htmlFor=\"contactChoice3\">Incomplete</label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Filter;\r\n","import react from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch\r\n  } from \"react-router-dom\";\r\nfunction Page1() {\r\n    let page1 = useRouteMatch(\"/\");\r\n\r\n    return    <p>Home</p>\r\n}\r\n\r\n// const match = useRouteMatch({\r\n//     path: \"/BLOG/:slug/\",\r\n//     strict: true,\r\n//     sensitive: true\r\n//   });\r\n  \r\n// const Input = props => \r\n//     Page1\r\n\r\n//<input />\r\n\r\nexport default Page1;\r\n\r\n","import react from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch\r\n  } from \"react-router-dom\";\r\n\r\nfunction Page2() {\r\n    let page2 = useRouteMatch(\"/\");\r\n\r\n    return    <p>About</p>\r\n}\r\n\r\nexport default Page2;\r\n\r\n","import react from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch,\r\n    NavLink\r\n  } from \"react-router-dom\";\r\nimport Page1 from \"./page-1\";\r\nimport Page2 from \"./page-2\";\r\n\r\nfunction Page3() {\r\n    let page3 = useRouteMatch(\"/\");\r\n\r\n    return(\r\n      <Router>\r\n      <div>\r\n        <ul>\r\n          <li>\r\n          <NavLink exact to=\"/\" activeStyle={{background: \"red\"}}>Home</NavLink>\r\n          </li>\r\n          <li>\r\n          <NavLink to=\"/about\" activeStyle={{background: \"red\"}}>About</NavLink>\r\n          </li>\r\n        </ul>\r\n\r\n        <hr />\r\n\r\n        <Switch>\r\n          {/* let page1 = useRouteMatch(\"/\");\r\n          let page2 = useRouteMatch(\"/about\");\r\n          let page3 = useRouteMatch(\"/dashboard\"); */}\r\n          <Route exact path=\"/\">\r\n            <Page1 />\r\n          </Route>\r\n          <Route path=\"/about\">\r\n            <Page2 />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n    );\r\n}\r\n\r\nexport default Page3;\r\n\r\n","import React from \"react\";\r\nimport List from './list';\r\nimport Add from './add';\r\nimport _map from 'lodash/map';\r\nimport Filter from \"./filter\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch,\r\n    NavLink\r\n  } from \"react-router-dom\";\r\n  import Page1 from '../router/page-1';\r\n  import Page2 from '../router/page-2';\r\n  import Page3 from '../router/page-3';\r\n    \r\n\r\n\r\nclass Todo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            todos:\r\n            [\r\n                {id: 1, name: 'Test1', status: false},\r\n                {id: 2, name: 'Test2', status: false}\r\n            ],\r\n            addStatus: false,\r\n            filter: 1,\r\n\r\n        };\r\n        this.removeRow = this.removeRow.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.changeStatus = this.changeStatus.bind(this);\r\n        this.handleFilter = this.handleFilter.bind(this);\r\n        this.onChangeFilter = this.onChangeFilter.bind(this);\r\n\r\n    }\r\n    removeRow(key) {\r\n        console.log(key);\r\n        let array = [...this.state.todos];\r\n        let filtered = array.filter(function(item) {\r\n            return item.id != key;\r\n        })\r\n        this.setState({\r\n            todos: filtered\r\n        });\r\n        // console.log(filtered);\r\n    };\r\n    changeStatus(id) {\r\n        const todos = this.state.todos;\r\n        let change = todos.map(function (item) {\r\n            return item.id === id ? item.status = !item.status : item.status;\r\n        })\r\n\r\n        this.setState({\r\n            change\r\n        });\r\n    };\r\n    addItem(name) {\r\n        console.log(name);\r\n        const todos = this.state.todos;\r\n        let ids = _map(todos, 'id');\r\n        let max = Math.max(...ids);\r\n        todos.push({\r\n            id: max+1,\r\n            name: name,\r\n            completed: false\r\n        });\r\n        console.log(todos);\r\n\r\n        this.setState({todos});\r\n    };\r\n    handleFilter() {\r\n        const todos = this.state.todos;\r\n        const filter = this.state.filter;\r\n        switch (filter) {\r\n            case 2:\r\n                return todos.filter(function (item) {\r\n                    return item.status === true\r\n                });\r\n            case 3:\r\n                return todos.filter(function (item) {\r\n                    return item.status === false\r\n                });\r\n            default:\r\n                return todos;\r\n        }\r\n    };\r\n    onChangeFilter(filter) {\r\n        this.setState({filter})\r\n    }\r\n\r\n    //() => this.removeRow(todo.id) work\r\n    // this.removeRow(todo.id) don't work\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Filter handleFilter={this.onChangeFilter}></Filter>\r\n                <div className=\"list\">\r\n                    <List list={this.handleFilter()} removeRow={this.removeRow} changeStatus={this.changeStatus}></List>\r\n                </div>\r\n                <Add addItem={item => this.addItem(item)}></Add>\r\n            </div>\r\n\r\n          //   <Router>\r\n          //   <div>\r\n          //     <ul>\r\n          //       <li>\r\n          //       <NavLink exact to=\"/\" activeStyle={{background: \"red\"}}>Home</NavLink>\r\n          //       </li>\r\n          //       <li>\r\n          //       <NavLink to=\"/about\" activeStyle={{background: \"red\"}}>About</NavLink>\r\n          //       </li>\r\n          //       <li>\r\n          //       <NavLink to=\"/dashboard\" activeStyle={{background: \"red\"}}>Dashboard</NavLink>\r\n          //       </li>\r\n          //     </ul>\r\n          //\r\n          //     <hr />\r\n          //\r\n          //     <Switch>\r\n          //       {/* let page1 = useRouteMatch(\"/\");\r\n          //       let page2 = useRouteMatch(\"/about\");\r\n          //       let page3 = useRouteMatch(\"/dashboard\"); */}\r\n          //       <Route exact path=\"/\">\r\n          //         <Page1 />\r\n          //       </Route>\r\n          //       <Route path=\"/about\">\r\n          //         <Page2 />\r\n          //       </Route>\r\n          //       <Route path=\"/dashboard\">\r\n          //         <Page3 />\r\n          //       </Route>\r\n          //     </Switch>\r\n          //   </div>\r\n          // </Router>\r\n        \r\n        );\r\n    }\r\n}\r\n\r\nexport default Todo;\r\n","import { render } from \"@testing-library/react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch,\r\n    NavLink\r\n  } from \"react-router-dom\";\r\nimport SignIn from \"../../components/form/sign-in\";\r\nimport SignUp from \"../../components/form/sign-up\";\r\nimport Page1 from '../../components/router/page-1';\r\nimport Page2 from '../../components/router/page-2';\r\nimport Page3 from '../../components/router/page-3';\r\nimport Todo from \"../../components/to-do\";\r\n\r\nconst Not_Found = () => <div>Not found</div>\r\n\r\nconst Routes = () => \r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n                <SignIn></SignIn>\r\n            </Route>\r\n            <Route path=\"/to-do\">\r\n                <Todo></Todo>\r\n            </Route>\r\n            <Route path=\"/dashboard\">\r\n                <Page3 />\r\n            </Route>\r\n            <Route path=\"/signup\">\r\n                <SignUp></SignUp>\r\n            </Route>\r\n            <Route path=\"/signin\">\r\n                <SignIn></SignIn>\r\n            </Route>\r\n            <Route component={Not_Found} />\r\n        </Switch>\r\n\r\nexport default Routes;\r\n  \r\n","import React from 'react';\r\nimport Routes from '../../app/routes/index';\r\nimport '../../index.css';\r\n\r\n\r\nimport { Layout, Menu } from 'antd';\r\nimport {\r\n    MenuUnfoldOutlined,\r\n    MenuFoldOutlined,\r\n    UserOutlined,\r\n    VideoCameraOutlined,\r\n    UploadOutlined,\r\n} from '@ant-design/icons';\r\nimport {Link, useLocation, withRouter  } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst { Header, Sider, Content } = Layout;\r\n\r\nclass Sidebar extends React.Component {\r\n    state = {\r\n        collapsed: false,\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed,\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Layout style={{ minHeight: '100vh' }}>\r\n                <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\r\n                    <div className=\"logo\" />\r\n                    <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['/']}>\r\n                        <Menu.Item key=\"/\" icon={<UserOutlined />}>\r\n                            <Link to=\"/\">Dashboard</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"/to-do\" icon={<VideoCameraOutlined />}>\r\n                            <Link to=\"/to-do\">Todo</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"/dashboard\" icon={<UploadOutlined />}>\r\n                            <Link to=\"/dashboard\">Router</Link>\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                </Sider>\r\n                <Layout className=\"site-layout\">\r\n                    <Header className=\"site-layout-background\" style={{ padding: 0 }}>\r\n                        {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\r\n                            className: 'trigger',\r\n                            onClick: this.toggle,\r\n                        })}\r\n                    </Header>\r\n                    <Content\r\n                        className=\"site-layout-background\"\r\n                        style={{\r\n                            margin: '24px 16px',\r\n                            padding: 24,\r\n                            minHeight: 280,\r\n                        }}\r\n                    >\r\n                        <Routes></Routes>\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\n// import './App.css';\r\n// import './form.scss';\r\nimport SignUp from './components/form/sign-up';\r\nimport SignIn from './components/form/sign-in';\r\n// import Tab from './components/form/tabs';\r\n// import Row from './components/to-do/row';\r\nimport Todo from './components/to-do/index';\r\nimport Page1 from './components/router/page-1';\r\nimport Page2 from './components/router/page-2';\r\nimport Page3 from './components/router/page-3';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  NavLink\r\n} from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport './index.css';\r\n\r\nimport Sidebar from './components/common/sidebar';\r\n\r\nfunction App() {\r\n\r\n  let routes = (\r\n    <Router>\r\n    <div>\r\n      <ul>\r\n        <li>\r\n          <NavLink to=\"/\" activeStyle={{color: \"red\"}}>Home</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/about\" activeStyle={{color: \"red\"}}>About</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/dashboard\" activeStyle={{color: \"red\"}}>Dashboard</NavLink>\r\n        </li>\r\n      </ul>\r\n\r\n      <hr />\r\n\r\n      <Switch>\r\n        {/* let page1 = useRouteMatch(\"/\");\r\n        let page2 = useRouteMatch(\"/about\");\r\n        let page3 = useRouteMatch(\"/dashboard\"); */}\r\n        <Route exact path=\"/\">\r\n          <Page1 />\r\n        </Route>\r\n        <Route path=\"/about\">\r\n          <Page2 />\r\n        </Route>\r\n        <Route path=\"/dashboard\">\r\n          <Page3 />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  </Router>\r\n\r\n    // <Switch>\r\n    //   <Route exact path=\"/page1\">\r\n    //     <Page1 />\r\n    //   </Route>\r\n    //   <Route path=\"/page2\">\r\n    //     <Page2 />\r\n    //   </Route>\r\n    //   <Route path=\"page3\">\r\n    //     <Page3 />\r\n    //   </Route>\r\n    // </Switch>\r\n  \r\n);\r\n\r\n  return (\r\n      <Sidebar></Sidebar>\r\n    // <div className=\"form\">\r\n      \r\n    //   <ul className=\"tab-group\">\r\n    //     <Tab class='tab' link='#signup' buttonName='Sign Up'></Tab>\r\n    //     <Tab class='tab' link='#login' buttonName='Log In'></Tab>\r\n    //   </ul>\r\n      \r\n      // <div className=\"tab-content\">\r\n        // <SignUp></SignUp>\r\n\r\n      //   <SignIn></SignIn>\r\n               \r\n      // </div>      \r\n    // </div>\r\n      // <form>\r\n      //     <Todo></Todo>\r\n      // </form>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport Routes from './app/routes/index';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <HashRouter basename=\"todo\">\r\n          <App></App>\r\n          {/*<Routes></Routes>*/}\r\n      </HashRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}